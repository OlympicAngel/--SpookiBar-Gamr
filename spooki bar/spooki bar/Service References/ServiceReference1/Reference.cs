//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace spooki_bar.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/UsersDataService", ItemName="ShopItem")]
    [System.SerializableAttribute()]
    public class Shop : System.Collections.Generic.List<spooki_bar.ServiceReference1.ShopItem> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShopItem", Namespace="http://schemas.datacontract.org/2004/07/UsersDataService")]
    [System.SerializableAttribute()]
    public partial class ShopItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string itemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string itemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loaclPatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string itemID {
            get {
                return this.itemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.itemIDField, value) != true)) {
                    this.itemIDField = value;
                    this.RaisePropertyChanged("itemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string itemName {
            get {
                return this.itemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.itemNameField, value) != true)) {
                    this.itemNameField = value;
                    this.RaisePropertyChanged("itemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string loaclPatch {
            get {
                return this.loaclPatchField;
            }
            set {
                if ((object.ReferenceEquals(this.loaclPatchField, value) != true)) {
                    this.loaclPatchField = value;
                    this.RaisePropertyChanged("loaclPatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUpdate", ReplyAction="http://tempuri.org/IUserService/CheckUpdateResponse")]
        bool CheckUpdate(string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserLogin", ReplyAction="http://tempuri.org/IUserService/UserLoginResponse")]
        string UserLogin(string username, string password, string gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTopAtGameAndUserRate", ReplyAction="http://tempuri.org/IUserService/GetTopAtGameAndUserRateResponse")]
        string[] GetTopAtGameAndUserRate(string userID, string gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShop", ReplyAction="http://tempuri.org/IUserService/GetShopResponse")]
        spooki_bar.ServiceReference1.Shop GetShop(string gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/BuyItemFromShop", ReplyAction="http://tempuri.org/IUserService/BuyItemFromShopResponse")]
        string BuyItemFromShop(string gameID, string userID, string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetSave", ReplyAction="http://tempuri.org/IUserService/ResetSaveResponse")]
        bool ResetSave(string userID, string gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserData", ReplyAction="http://tempuri.org/IUserService/UserDataResponse")]
        string UserData(string userID, string gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UseItem", ReplyAction="http://tempuri.org/IUserService/UseItemResponse")]
        bool UseItem(string userID, string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/InGameEnd", ReplyAction="http://tempuri.org/IUserService/InGameEndResponse")]
        string InGameEnd(string userID, int night, int nightmareTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAfterGame", ReplyAction="http://tempuri.org/IUserService/UpdateAfterGameResponse")]
        void UpdateAfterGame(string userID, bool isWin, int night);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserData", ReplyAction="http://tempuri.org/IUserService/ResetUserDataResponse")]
        void ResetUserData(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ItemOwnList", ReplyAction="http://tempuri.org/IUserService/ItemOwnListResponse")]
        string[] ItemOwnList(string userId, string gameid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : spooki_bar.ServiceReference1.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<spooki_bar.ServiceReference1.IUserService>, spooki_bar.ServiceReference1.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckUpdate(string version) {
            return base.Channel.CheckUpdate(version);
        }
        
        public string UserLogin(string username, string password, string gameID) {
            return base.Channel.UserLogin(username, password, gameID);
        }
        
        public string[] GetTopAtGameAndUserRate(string userID, string gameID) {
            return base.Channel.GetTopAtGameAndUserRate(userID, gameID);
        }
        
        public spooki_bar.ServiceReference1.Shop GetShop(string gameID) {
            return base.Channel.GetShop(gameID);
        }
        
        public string BuyItemFromShop(string gameID, string userID, string item) {
            return base.Channel.BuyItemFromShop(gameID, userID, item);
        }
        
        public bool ResetSave(string userID, string gameID) {
            return base.Channel.ResetSave(userID, gameID);
        }
        
        public string UserData(string userID, string gameID) {
            return base.Channel.UserData(userID, gameID);
        }
        
        public bool UseItem(string userID, string itemID) {
            return base.Channel.UseItem(userID, itemID);
        }
        
        public string InGameEnd(string userID, int night, int nightmareTime) {
            return base.Channel.InGameEnd(userID, night, nightmareTime);
        }
        
        public void UpdateAfterGame(string userID, bool isWin, int night) {
            base.Channel.UpdateAfterGame(userID, isWin, night);
        }
        
        public void ResetUserData(string userID) {
            base.Channel.ResetUserData(userID);
        }
        
        public string[] ItemOwnList(string userId, string gameid) {
            return base.Channel.ItemOwnList(userId, gameid);
        }
    }
}
